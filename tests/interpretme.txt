# test operatoren
1 && 0; 1 || 0 ; !1; !0; 0 == 1; 0 != 1; # 0 1 0 1 0 1 
0 > 1; 0 < 1; 0 >= 1; 0 >= 0; 1 <= 0; 1 <=1 # 0 1 0 1 0 1  
2+3; 2*3; 2/4; 2^3; 2 % 3; 3 % 2; -2; # 5 6 0.5 8 2 1 -2 

# precedentie operatoren
a+=1 && 0 # 0
a # 1
a-= 0 || 1 # 1  
a # 1
a*= 1 && 0 # 0
a # 1

a=2
a^=2 && 0 # 0
a # 4
a %= 3 || 0 # 1 
a # 1
a /= 4 ; a# 0.25
a=1
a+=2*2; a # 5

10-++a # 4
1+--a # 6

1 || 1 && 0; # 1
1 && 0 + 2; # 1
1 && 0 - 2; # 1 
2+3*5; # 17 
4+1/5; # 4.2
4+3%2; # 5 
2+2^3; # 10
2-3*5; # -13
6-1/5; # 5.8
4-3%2; # 3
2-2^3; # -6
2*2^3; # 16
8/2^3; # 1
8 % 5^2; # 8 
-2+3; # 1
-2^2; # 4

# stack/newline test
define f(a,b) { a; b;
return (a + b) / 2
}

c = d = 1;
a = b = 2;

f(c,d); # 1 1 1
a; b; # 2 2

define g(c){ # doubles the input
auto d; d
d = 3*c;; return f(c,d) }

if (d < 3)
 while (d < 16) d = g(d)

# 0 1 3
# 0 2 6
# 0 4 12
# 0 8 24

a; b; c; d # 2 2 1 16

if ( a < b ) a else b^2 # 4

if ( a < b ) { a; } else
b^2 # 4

if ( a < b )
{
a
} else {
a^2
} # 4

# break/continue test
while (d < 32) {
 d 
 if ( d < 17 ) {
  d++
  continue;
 }
 d *= 2;
 d;
}
# 16 16
# 17 34

while ( d < 64 ){
 d ; if (d < 50) break ; d+=20 }
# 34

